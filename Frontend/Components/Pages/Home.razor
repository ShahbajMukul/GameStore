@page "/"
@inject GamesClients Client
<PageTitle>Game Catalog</PageTitle>

<div class="mt-2">
    <NavLink class="btn btn-primary" href="/editgame">New Game</NavLink>
</div>
@* <h1 class="h1 text-center text-dark">Game Catalog</h1> *@


@if (games == null)
{
    <p class="text-center mb-3">Loading...</p>
    @* add something fun *@
    <div class="d-flex justify-content-center">
        <div class="spinner-border text-primary" role="status">
            <span class="visually-hidden">Loading...</span>
        </div>
    </div>
}
else
{
    <h1 class="h1 text-center text-dark">Game Catalog</h1>
}
<table class="table table-striped table-bordered table-hover m-3">
    <thead class="table-dark">
        <tr>
            <th class="text-center">Id</th>
            <th class="text-center">Name</th>
            <th class="text-center">Description</th>
            <th class="text-center">Genre</th>
            <th class="text-center">Price</th>
            <th class="text-center">Release Date</th>
            <th class="text-center">Edit</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var game in games)
        {
            <tr>
                <td>@game.Id</td>
                <td>@game.Name</td>
                <td>@game.Description</td>
                <td>@game.Genre</td>
                <td class="text-end">@game.Price.ToString("C2")</td>
                <td>@game.ReleaseDate</td>
                <td>
                    <div class="d-flex">
                        <a href="@GetUrl(game.Id)" class="btn btn-secondary me-2" role="button">
                            <i class="bi bi-pencil-square"></i>
                        </a>
                        <button type="button" class="btn btn-danger" data-bs-toggle="modal"
                            data-bs-target="@GetDeleteModalId(game)">
                            <i class="bi bi-trash"></i>
                        </button>
                    </div>
                    <DeleteGame Game="@game" /> <!-- This is the modal -->
                </td>
            </tr>
        }
    </tbody>
</table>
}

@code {

    private GameSummary[]? games;


    // This method is called when the component is initialized
    protected override void OnInitialized()
    {
        // Get the games from the API
        games = Client.GetGames();
    }

    private static string GetUrl(int id) => $"/editgame/{id}";

    private string GetDeleteModalId(GameSummary game)
    {
        ArgumentNullException.ThrowIfNull(game);
        return $"#{DeleteGame.GetModalId(game)}";
    }



}
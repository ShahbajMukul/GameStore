@inject GamesClients Client
@inject NavigationManager NavigationManager

@* We need interactivity for delete *@
@rendermode InteractiveServer


@* Modal *@
<div class="modal fade" id="@GetModalId(Game)" tabindex="-1" role="dialog" aria-labelledby="deleteGameModalLabel"
    aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="deleteGameModalLabel">@title</h5>
            </div>
            <div class="modal-body">
                Are you sure you want to delete this game?
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                <button type="button" class="btn btn-danger" @onclick="@HandleDelete">Delete</button>
            </div>
        </div>
    </div>
</div>

@code {
    [Parameter] // This attribute is used to supply the parameter from the URL
    public GameSummary? Game { get; set; }

    private string title = string.Empty;

    protected override void OnParametersSet()
    {
        title = $"Delete {Game?.Name}?";
    }

    public static string GetModalId(GameSummary? game)
    {
        ArgumentNullException.ThrowIfNull(game);
        return $"deleteGameModal{game.Id}";
    }


    private void HandleDelete()
    {
        ArgumentNullException.ThrowIfNull(Game);
        Client.DeleteGame(Game.Id);
        NavigationManager.Refresh();
    }
}
